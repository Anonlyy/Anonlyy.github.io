{"title":"MPA和SPA,你选哪一个","uid":"a62ea6a9ff7b388523bd21c04a242050","slug":"MPA和SPA-你选哪一个","date":"2017-11-23T00:57:12.000Z","updated":"2022-03-30T02:35:15.666Z","comments":true,"path":"api/articles/MPA和SPA-你选哪一个.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0023.png","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>旧的桌面应用程序被Web应用程序推到了极点。基于Web的应用程序使用起来非常方便，可以从多个设备访问，并且易于升级。对移动友好的复杂应用程序的需求正在上升。熟悉Web应用程序开发的您必须了解两种主要的Web设计类型：单页应用程序（SPA）和多页面应用程序（MPA）。</p>\n<h2 id=\"多页面应用程序-MultiPage-Application，MPA\"><a href=\"#多页面应用程序-MultiPage-Application，MPA\" class=\"headerlink\" title=\"多页面应用程序(MultiPage Application，MPA)\"></a>多页面应用程序(MultiPage Application，MPA)</h2><p><img src=\"https://user-gold-cdn.xitu.io/2017/11/17/15fc93684b5f10e1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\"><br><code>MPA</code>的工作遵循传统模式，即每次更改都会重新提交，或者从服务器显示为新的页面。鉴于这些应用程序的性质，它们的大小以适应其功能。内容的巨大增加给应用程序提供了多层UI的复杂性。侵入的复杂性是在21世纪初引入的<code>AJAX</code>（异步JavaScript和XML），这使得仅仅刷新网站的一部分而不是重新提交整个页面成为可能。尽管它极大地改善了用户体验，但却为页面增添了一层复杂性。与<code>SPA</code>的直接方法相比，<code>MPA</code>的发展是复杂的。</p>\n<h3 id=\"MPA的优点\"><a href=\"#MPA的优点\" class=\"headerlink\" title=\"MPA的优点\"></a>MPA的优点</h3><ol>\n<li><code>MPA</code>方法最适合那些设计为视觉地图的网站。多级菜单导航是传统<code>MPA</code>的核心。</li>\n<li>开发成本和学习门槛较低,易于上手。</li>\n<li>SEO搜索引擎优化管理是有效的，因为不同的关键字可以优化每个应用程序的一个关键字。</li>\n</ol>\n<h3 id=\"MPA的弱点\"><a href=\"#MPA的弱点\" class=\"headerlink\" title=\"MPA的弱点\"></a>MPA的弱点</h3><ol>\n<li><code>MPA</code>资源不共用，每个页面都需要加载,这就意味着大部分页面的部分代码和资源都是重复加载的.</li>\n<li><strong>用户体验</strong>较差,多页面切换会造成整页刷新,加载缓慢,流畅度也不足,且无法实现转场动画。</li>\n<li>传统前后端开发模式,非前后端分离,导致不够高效。</li>\n</ol>\n<h2 id=\"单页应用程序-SinglePage-Web-Application，SPA\"><a href=\"#单页应用程序-SinglePage-Web-Application，SPA\" class=\"headerlink\" title=\"单页应用程序(SinglePage Web Application，SPA)\"></a>单页应用程序(SinglePage Web Application，SPA)</h2><p><img src=\"https://user-gold-cdn.xitu.io/2017/11/17/15fc93562b418a6e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\"></p>\n<p>简单点说,<code>SPA</code>就是只有一个Web页面的应用，单页应用程序 (SPA) 是加载单个HTML 页面并在用户与应用程序交互时动态更新该页面的Web应用程序。 浏览器一开始会加载必需的HTML、CSS和JavaScript，所有的操作都在这张页面上完成，都由JavaScript来控制。</p>\n<h3 id=\"怎么实现无刷新的呢\"><a href=\"#怎么实现无刷新的呢\" class=\"headerlink\" title=\"怎么实现无刷新的呢?\"></a>怎么实现无刷新的呢?</h3><p>那就是History API.<br><code>History API</code>是HTML5 的历史记录 API。这套 API 提供一种「人为操纵」浏览器历史记录的方法,可以实现无刷新更改地址栏链接，配合 AJAX 可以做到无刷新跳转。<br>简单来说：假设当前页面为xposean.xin&#x2F;，那么执行下面的 JavaScript 语句：</p>\n<pre><code>window.history.pushState(null, null, &quot;/profile/&quot;);\n</code></pre>\n<p>之后，地址栏的地址就会变成xposean.xin&#x2F;profile&#x2F;，但同时浏览器不会刷新页面，甚至不会检测目标页面是否存在。</p>\n<h4 id=\"pushState方法\"><a href=\"#pushState方法\" class=\"headerlink\" title=\"pushState方法\"></a>pushState方法</h4><p>浏览器历史记录可以看作一个「栈」。栈是一种后进先出的结构，可以把它想象成一摞盘子，用户每点开一个新网页，都会在上面加一个新盘子，叫「入栈」。用户每次点击「后退」按钮都会取走最上面的那个盘子，叫做「出栈」。而每次浏览器显示的自然是最顶端的盘子的内容。</p>\n<p>执行pushState函数之后，会往浏览器的历史记录中添加一条新记录，同时改变地址栏的地址内容。它可以接收三个参数，按顺序分别为：</p>\n<ol>\n<li><p>一个对象或者字符串，用于描述新记录的一些特性。这个参数会被一并添加到历史记录中，以供以后使用。这个参数是开发者根据自己的需要自由给出的。</p>\n</li>\n<li><p>一个字符串，代表新页面的标题。当前基本上所有浏览器都会忽略这个参数。</p>\n</li>\n<li><p>一个字符串，代表新页面的相对地址。</p>\n<pre><code> var state = &#123;\n     id: 2,\n     name: &quot;profile&quot;\n &#125;;\n window.history.pushState(state, &quot;My Profile&quot;, &quot;/profile/&quot;);\n</code></pre>\n</li>\n</ol>\n<h4 id=\"replaceState-方法\"><a href=\"#replaceState-方法\" class=\"headerlink\" title=\"replaceState 方法\"></a>replaceState 方法</h4><p>有时，你希望不添加一个新记录，而是替换当前的记录（比如对网站的 loading-page），则可以使用replaceState方法。这个方法和pushState的参数完全一样。</p>\n<h3 id=\"SPA的优点\"><a href=\"#SPA的优点\" class=\"headerlink\" title=\"SPA的优点\"></a>SPA的优点</h3><ol>\n<li>分离前后端关注点，前端负责view，后端负责model，各司其职； </li>\n<li>服务器只接口提供数据，不用展示逻辑和页面合成，提高性能； </li>\n<li>同一套后端程序代码，不用修改兼容Web界面、手机； </li>\n<li>用户体验好、快，内容的改变不需要重新加载整个页面 </li>\n<li>可以缓存较多数据，减少服务器压力 </li>\n<li>单页应用像网络一样，几乎随处可以访问—不像大多数的桌面应用，用户可以通过任务网络连接和适当的浏览器访问单页应用。如今，这一名单包括智能手机、平板电脑、电视、笔记本电脑和台式计算机。</li>\n</ol>\n<h3 id=\"SPA的缺点：\"><a href=\"#SPA的缺点：\" class=\"headerlink\" title=\"SPA的缺点：\"></a>SPA的缺点：</h3><ol>\n<li>SEO问题</li>\n<li>首次加载时间较长。 </li>\n<li>页面复杂度提高很多，复杂逻辑难度成倍,意味着开发成本和学习成本的提高。</li>\n</ol>\n<h2 id=\"感谢\"><a href=\"#感谢\" class=\"headerlink\" title=\"感谢\"></a>感谢</h2><p>本文部分内容出处为<a href=\"https://mouthmedia.com/blog/mpa-or-spa-which-one-should-you-choose/\">MPA OR SPA? WHICH ONE SHOULD YOU CHOOSE?</a></p>\n","text":"背景旧的桌面应用程序被Web应用程序推到了极点。基于Web的应用程序使用起来非常方便，可以从多个设备访问，并且易于升级。对移动友好的复杂应用程序的需求正在上升。熟悉Web应用程序开发的您必须了解两种主要的Web设计类型：单页应用程序（SPA）和多页面应用程序（MPA）。 多页面应...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-MultiPage-Application%EF%BC%8CMPA\"><span class=\"toc-text\">多页面应用程序(MultiPage Application，MPA)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MPA%E7%9A%84%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">MPA的优点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MPA%E7%9A%84%E5%BC%B1%E7%82%B9\"><span class=\"toc-text\">MPA的弱点</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-SinglePage-Web-Application%EF%BC%8CSPA\"><span class=\"toc-text\">单页应用程序(SinglePage Web Application，SPA)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E6%97%A0%E5%88%B7%E6%96%B0%E7%9A%84%E5%91%A2\"><span class=\"toc-text\">怎么实现无刷新的呢?</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pushState%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">pushState方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#replaceState-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">replaceState 方法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPA%E7%9A%84%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">SPA的优点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SPA%E7%9A%84%E7%BC%BA%E7%82%B9%EF%BC%9A\"><span class=\"toc-text\">SPA的缺点：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%84%9F%E8%B0%A2\"><span class=\"toc-text\">感谢</span></a></li></ol>","author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"mapped":true,"prev_post":{"title":"前端包管理器的发展","uid":"656b08fb883cb37221ecfb23b5e18094","slug":"前端包管理器的发展","date":"2017-12-08T03:53:43.000Z","updated":"2022-03-30T02:35:15.670Z","comments":true,"path":"api/articles/前端包管理器的发展.json","keywords":null,"cover":"https://image.xposean.top/blogImage/009.png","text":"前言我们在开发时，会用到很多开发者写的第三方库。如果我们要使用别人写的某个包，每次都根据名称搜索一下官方网站，下载代码，解压，再使用，非常繁琐。于是一个集中管理的工具应运而生：大家都把自己开发的模块打包后放到一个包管理器的平台上，如果要使用，直接通过包管理器安装就可以直接用，不用...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}},"next_post":{"title":"表格布局display:table的妙用","uid":"12871e3c295dd1902181cbe44daad752","slug":"表格布局display-table的妙用","date":"2017-11-12T11:29:49.000Z","updated":"2022-03-30T02:35:15.679Z","comments":true,"path":"api/articles/表格布局display-table的妙用.json","keywords":null,"cover":[],"text":"今天给大家讲一下,CSS2提供的一个布局,display:table;,虽然在CSS3提供了两个全新的布局,Flex和Grid布局,但却存在这样或那样的兼容性问题,其次我们有时候因为table的语义化和SEO问题,不想使用table标签,却需要实现table标签的表格布局,就能用...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}}}