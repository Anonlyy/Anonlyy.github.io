{"title":"教你通过利用ssh编写前端一键部署脚本","uid":"7ba40a83c9b0e7e96e8e9f3699affe32","slug":"教你通过利用ssh编写一键部署脚本","date":"2020-05-19T11:21:17.000Z","updated":"2022-03-30T02:35:15.673Z","comments":true,"path":"api/articles/教你通过利用ssh编写一键部署脚本.json","keywords":null,"cover":"https://image.xposean.top/blogImage/003.png","content":"<p>今天来介绍一下, 如何利用<code>node</code>编写部署脚本, 来实现一键部署的功能</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>因为我司的开发流程比较特殊, 开发环境的服务器<code>ip</code>会经常变化, 并不固定, 所以在前端部署代码的时候十分麻烦,</p>\n<p>部署流程如下:</p>\n<p> <img src=\"https://image.xposean.top/20200623172147.png\" alt=\"image-20200623172139353\"></p>\n<p>可以看出, 这种方式存在一些缺点：</p>\n<ul>\n<li>每次部署都需要打开<code>xshell</code>或<code>winSCP</code>软件</li>\n<li>部署多个服务器<code>ip</code>,十分麻烦, 需要来回切换, 容易替换错误</li>\n<li>每次都需要手动复制代码或执行上传命令</li>\n</ul>\n<p>全自动化的部署其实首推<code>jenkins</code>实现，<code>jenkins</code>可以根据<code>gitlab push</code>或者<code>merge</code>事件自动打包代码到<code>web</code>目录，可以参考：</p>\n<p><a href=\"https://juejin.im/post/5ad1980e6fb9a028c42ea1be\">实战笔记：Jenkins打造强大的前端自动化工作流</a></p>\n<p>但是因为我们的部署流程比较特殊, 并不是固定的几台服务器, 没有那么方便, 其次公司的<code>gitlab</code>最高权限是在总部, 操作起来比较麻烦, 需要申请权限, 于是为了能够快速的完成一键部署功能, 选用了采用轻量部署的方案来实现自动化部署了.</p>\n<h2 id=\"方案预研\"><a href=\"#方案预研\" class=\"headerlink\" title=\"方案预研\"></a>方案预研</h2><p>我们想要达到的效果是: 运行 <code>npm run deploy</code> 的命令, 再输入部署的服务器ip, 就直接将执行打包部署等一系列操作。</p>\n<p>那么要达到这个效果, 首先就要使用到一些<code>node</code> 库了,</p>\n<h3 id=\"1-node-ssh\"><a href=\"#1-node-ssh\" class=\"headerlink\" title=\"1. node-ssh\"></a>1. node-ssh</h3><p>首先要知道的是, 我们想要通过本地连接到我们对应的服务器, 那么就要使用<code>ssh</code>协议连接服务器。</p>\n<p><a href=\"https://github.com/steelbrain/node-ssh\">node-ssh</a>是一个基于ssh2的轻量级npm包，主要用于ssh连接服务器、上传文件、执行命令, 通过它我们可以替代<code>xshell</code>的功能</p>\n<p>用到的api：</p>\n<ul>\n<li><code>ssh.connect</code>：连接服务器</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh.connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  host: <span class=\"token string\">'localhost'</span>,\n  username: <span class=\"token string\">'steel'</span>,\n  privateKey: <span class=\"token string\">'/home/steel/.ssh/id_rsa'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>ssh.putFile</code>：上传文件</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">ssh<span class=\"token punctuation\">.</span><span class=\"token function\">putFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/home/steel/Lab/localPath'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/home/steel/Lab/remotePath'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The File thing is done\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something's wrong\"</span><span class=\"token punctuation\">)</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>ssh.execCommand</code>：执行远端服务器命令</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">ssh<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rm -r dist'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">cwd</span><span class=\"token operator\">:</span><span class=\"token string\">'/var/www'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'STDOUT: '</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">)</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'STDERR: '</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-archiver\"><a href=\"#2-archiver\" class=\"headerlink\" title=\"2. archiver\"></a>2. archiver</h3><p><a href=\"https://github.com/archiverjs/node-archiver\">archiver</a>是一个用于生成压缩包的<code>npm</code>包，可以把我们编译后的文件夹打包成<code>zip</code>、<code>gz</code>等格式的压缩包, 方便上传到服务端</p>\n<p>使用指南：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> archiver <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'archiver'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 设置压缩类型及级别</span>\n<span class=\"token keyword\">const</span> archive <span class=\"token operator\">=</span> <span class=\"token function\">archiver</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zip'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token literal-property property\">zlib</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建文件输出流</span>\n<span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/dist.zip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 通过管道方法将输出流存档到文件</span>\narchive<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 从subdir子目录追加内容并重命名</span>\narchive<span class=\"token punctuation\">.</span><span class=\"token function\">directory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'subdir/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'new-subdir'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 完成打包归档</span>\narchive<span class=\"token punctuation\">.</span><span class=\"token function\">finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-chalk\"><a href=\"#3-chalk\" class=\"headerlink\" title=\"3. chalk\"></a>3. chalk</h3><p><a href=\"https://github.com/chalk/chalk\">chalk</a> 就是用来在终端中优雅地输出带颜色的文本, <strong>不需要记忆、查阅样式手册</strong>,直接调用chalk的函数可以很方便的显示不同颜色不同样式的终端文字, 效果大致如下：</p>\n<p><img src=\"https://image.xposean.top/20200813113745.png\"></p>\n<p><code>chalk</code> 将各种颜色和样式修饰符实现为各个函数，并且支持链式调用。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> chalk <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chalk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 输出蓝色的MCC</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MCC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 输出蓝色带下划线的MCC</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span><span class=\"token function\">underline</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MCC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 使用RGB颜色输出</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">underline</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MCC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">hex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#049CDB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bold</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MCC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">bgHex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#049CDB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bold</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MCC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"4-inquirer\"><a href=\"#4-inquirer\" class=\"headerlink\" title=\"4. inquirer\"></a>4. inquirer</h3><p>因为我们的命令行使用过程中需要 用户输入或者选择一些参数, 那么就可以使用<a href=\"https://github.com/SBoudrias/Inquirer.js\">inquirer</a>来处理用户的终端输入, 实现终端交互。很多<code>cli</code>脚手架都是使用<code>inquirer</code>来实现配置的哦。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> promptList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'IP'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'please input hostIP(example: 10.30.1.1)?'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'10.30.10.62'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">validate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'IP is require!!(ctrl+c exit)'</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>就可以实现以下的效果：</p>\n<p><img src=\"http://image.xposean.top/20200813111131.png\" alt=\"image-20200813111125706\"></p>\n<h3 id=\"5-ora\"><a href=\"#5-ora\" class=\"headerlink\" title=\"5. ora\"></a>5. ora</h3><p>如果想要在命令行中添加比较好看的<code>loading</code>, 这个时候<a href=\"https://github.com/sindresorhus/ora#readme\">ora</a>就可以派上用场了, 在一些需要网络通信场合, 加上<code>loading</code>可以拥有更好的用户体验, 所有这里我们还是给它加上。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> ora <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ora'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">const</span> spinner <span class=\"token operator\">=</span> <span class=\"token function\">ora</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Loading unicorns'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    spinner<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n    spinner<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">'Loading rainbows'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://image.xposean.top/20200813113629.svg\" alt=\"img\"></p>\n<p>那么以上就是我们在开发部署功能中会使用到的库了.</p>\n<h2 id=\"方案实践\"><a href=\"#方案实践\" class=\"headerlink\" title=\"方案实践\"></a>方案实践</h2><p>那么在实际开发阶段, 我们共大致有这几个流程:</p>\n<p><img src=\"https://image.xposean.top/20200813150840.png\" alt=\"image-20200813150838192\"></p>\n<p>流程如下：</p>\n<ol>\n<li>提示用户输入 服务器<code>IP</code>、用户名(root)、密码(如果服务器<code>IP</code>是固定的, 可以统一写在配置文件里)</li>\n<li>通过<code>node-ssh</code>测试连接服务器是否正常(固定服务器可不测试)</li>\n<li>本地执行打包命令例：<code>npm run build</code>生成<code>dist</code>文件夹</li>\n<li>通过<code>archiver</code>将<code>dist</code>文件夹打包成<code>dist.tar.gz</code>(<code>linux</code>系统可以直接解压此格式, 无需另外安装其他库)</li>\n<li>连接服务器并上传压缩包，使用<code>ssh.putFile</code>上传<code>dist.tar.gz</code></li>\n<li>服务端解压缩<code>dist.tar.gz</code>，并重启<code>nginx</code>服务</li>\n<li>删除本地<code>dist.tar.gz</code>文件</li>\n</ol>\n<h3 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h3><p>通过<code>npm</code>下载对应的库</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> node-ssh ora chalk inquirer shelljs archiver --save-dev<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//deploy.js 代码已注释</span>\n<span class=\"token keyword\">const</span> Node_ssh <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node-ssh'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> ora <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ora'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> chalk <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chalk'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> inquirer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inquirer'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shelljs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> projectDir <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> ssh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node_ssh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> archiver <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'archiver'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">resolve</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">dir</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// loggs</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">errorLog</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">*********</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>error<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">*********</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">defaultLog</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">log</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">*********</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>log<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">*********</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">successLog</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">log</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">*********</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>log<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">*********</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 编译模式(纯编译、打包为压缩包、打包并上传)</span>\n<span class=\"token keyword\">let</span> deployMode <span class=\"token operator\">=</span> <span class=\"token string\">'deploy'</span>\n<span class=\"token comment\">// 文件夹位置</span>\n<span class=\"token keyword\">const</span> distDir <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../dist'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> distZipPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../dist.tar.gz'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">let</span> ipFileContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">const</span> sshConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  host<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认用户名</span>\n  <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token comment\">// SSH端口</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// ********* TODO 打包代码 *********</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compileDist</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 进入本地文件夹</span>\n  <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'开始编译打包代码'</span><span class=\"token punctuation\">)</span>\n  shell<span class=\"token punctuation\">.</span><span class=\"token function\">cd</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  shell<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">npm run build</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'编译完成'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">runTask</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">isRepeat</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRepeat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'进入前端代码打包自动替换模式'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 判断是否存在 dist 文件夹有则询问是否重新编译</span>\n  <span class=\"token keyword\">const</span> modePromptList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'mode'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">choices</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Packed into packages(.tar.gz)'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'gzip'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">short</span><span class=\"token operator\">:</span> <span class=\"token string\">'gzip'</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Packed into dist folder'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">short</span><span class=\"token operator\">:</span> <span class=\"token string\">'build'</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Auto deploy'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'deploy'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">short</span><span class=\"token operator\">:</span> <span class=\"token string\">'deploy'</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Please choice your mode?'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'deploy'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> modePromptValue <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> inquirer<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>modePromptList<span class=\"token punctuation\">)</span>\n  deployMode <span class=\"token operator\">=</span> modePromptValue<span class=\"token punctuation\">.</span>mode\n  <span class=\"token keyword\">let</span> deployPromptList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deployMode <span class=\"token operator\">===</span> <span class=\"token string\">'deploy'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    deployPromptList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'IP'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'please input hostIP(example: 10.30.1.1)?'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'10.30.10.62'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">validate</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'IP is require!!(ctrl+c exit)'</span>\n          <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'please input username(example: root)?'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'root'</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'Password'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'please input password(example: root)?'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'root'</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deployMode <span class=\"token operator\">!==</span> <span class=\"token string\">'build'</span> <span class=\"token operator\">&amp;&amp;</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>distDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    deployPromptList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'confirm'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'isRebuild'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Do you need to rebuild dist folder?'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">const</span> promptValueList <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> inquirer<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>deployPromptList<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deployMode <span class=\"token operator\">===</span> <span class=\"token string\">'gzip'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> isRebuild <span class=\"token operator\">=</span> promptValueList<span class=\"token punctuation\">.</span>isRebuild\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRebuild <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>distDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 重新编译本地代码</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">compileDist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">startZip</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 直接压缩上传代码</span>\n      <span class=\"token function\">startZip</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deployMode <span class=\"token operator\">===</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">compileDist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">let</span> sshConnectState\n  sshConfig<span class=\"token punctuation\">.</span>host <span class=\"token operator\">=</span> promptValueList<span class=\"token punctuation\">.</span><span class=\"token constant\">IP</span>\n  sshConfig<span class=\"token punctuation\">.</span>username <span class=\"token operator\">=</span> promptValueList<span class=\"token punctuation\">.</span>username\n  sshConfig<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> promptValueList<span class=\"token punctuation\">.</span>password\n  <span class=\"token keyword\">const</span> spinner <span class=\"token operator\">=</span> <span class=\"token function\">ora</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">正在连接 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>sshConfig<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> \\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">spinner</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">interval</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Optional</span>\n      <span class=\"token literal-property property\">frames</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'⠋'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠙'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠹'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠸'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠼'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠴'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠦'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠧'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠇'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'⠏'</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  spinner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    sshConnectState <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">checkSSHConnect</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    spinner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">===</span> <span class=\"token string\">'client-authentication'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 验证错误, 则重新输入密码</span>\n      sshConnectState <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">handleAuthError</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">,</span> spinner<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssh 连接异常！请输入正确的IP地址、用户名或密码'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sshConnectState <span class=\"token operator\">===</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssh 连接成功'</span><span class=\"token punctuation\">)</span>\n    spinner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> isRebuild <span class=\"token operator\">=</span> promptValueList<span class=\"token punctuation\">.</span>isRebuild\n    ipFileContent <span class=\"token operator\">=</span> <span class=\"token function\">readApiFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// console.log('ipFileContent', ipFileContent)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRebuild <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>distDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 重新编译本地代码</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">compileDist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">startZip</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 直接压缩上传代码</span>\n      <span class=\"token function\">startZip</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    spinner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssh 连接异常！请输入正确的IP地址、用户名或密码'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleAuthError</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sshConfig<span class=\"token punctuation\">,</span> spinner</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">/* eslint-disable-next-line */</span>\n  <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssh 连接错误！请输入正确的密码'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> errorPromptList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'Password'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'please input password(example: root)?'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'root'</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> errorPromptValueList <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> inquirer<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>errorPromptList<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> sshConnectRepeatState <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  sshConfig<span class=\"token punctuation\">.</span>password <span class=\"token operator\">=</span> errorPromptValueList<span class=\"token punctuation\">.</span>password\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    spinner <span class=\"token operator\">=</span> <span class=\"token function\">ora</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">正在连接 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>sshConfig<span class=\"token punctuation\">.</span>host<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> \\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    spinner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sshConnectRepeatState <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">checkSSHConnect</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n    spinner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> sshConnectRepeatState\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    spinner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token operator\">===</span> <span class=\"token string\">'client-authentication'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 验证错误, 则重新输入密码</span>\n      <span class=\"token comment\">/* eslint-disable-next-line */</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">handleAuthError</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">,</span> spinner<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> error\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 开始打包</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">startZip</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>distZipPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist.zip已经存在, 即将删除压缩包'</span><span class=\"token punctuation\">)</span>\n      fs<span class=\"token punctuation\">.</span><span class=\"token function\">unlinkSync</span><span class=\"token punctuation\">(</span>distZipPath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'即将开始压缩zip文件'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">compress</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dist.tar.gz'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// await zipper.sync.zip(distDir).compress().save(distZipPath)</span>\n    <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'文件夹压缩成功'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'压缩dist文件夹失败'</span><span class=\"token punctuation\">)</span>\n    process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deployMode <span class=\"token operator\">===</span> <span class=\"token string\">'deploy'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行完毕'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 测试是否联通ssh</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">checkSSHConnect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    ssh<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// console.log('err', err.level)</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>level <span class=\"token operator\">||</span> <span class=\"token string\">'unknown error'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 上传文件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">uploadFile</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> spinner <span class=\"token operator\">=</span> <span class=\"token function\">ora</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">正在连接 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>host<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  spinner<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  ssh<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>sshConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      spinner<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// successLog(`  SSH连接成功`)</span>\n      <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">上传zip至目录</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>sshConfig<span class=\"token punctuation\">.</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      ssh<span class=\"token punctuation\">.</span><span class=\"token function\">putFile</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>projectDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/dist.tar.gz</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>sshConfig<span class=\"token punctuation\">.</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/dist.tar.gz</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">  zip包上传成功</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'解压zip包'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token function\">statrRemoteShell</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'  文件传输异常'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n          process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">' 连接失败'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n      process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 执行Linux命令</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">runCommand</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">command<span class=\"token punctuation\">,</span> webDir</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">defaultLog</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">执行命令</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>command<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// console.log('webDir', webDir)</span>\n    ssh<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">cwd</span><span class=\"token operator\">:</span> webDir <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">// console.log(result.stdout)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>stderr <span class=\"token operator\">&amp;&amp;</span> result<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'debconf: unable to initialize frontend: Dialog'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行出错, 正在重试...'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> webDir<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'执行命令出错'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">)</span>\n          process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 开始执行远程命令</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">statrRemoteShell</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> webDir <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> config\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// await runCommand('apt-get install unzip --force-yes', webDir)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">cd </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> webDir<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rm -r dist'</span><span class=\"token punctuation\">,</span> webDir<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// await runCommand(`mkdir dist`, webDir)</span>\n    <span class=\"token comment\">// await runCommand(`cd dist`, webDir)</span>\n    <span class=\"token comment\">// await runCommand(`unzip -o $&#123;webDir&#125;dist.zip `, `$&#123;webDir&#125;dist`)</span>\n    <span class=\"token comment\">// await runCommand(`rm -r dist.zip`, `$&#123;webDir&#125;`)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">tar -zxmf dist.tar.gz -C </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rm -r dist.tar.gz</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">service nginx restart</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">runCommand</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">service manager restart</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>webDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'  解压成功'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">deleteLocalZip</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'  文件解压失败'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 删除本地dist.zip包</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">deleteLocalZip</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> projectName<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> config\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>projectDir<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">/dist.tar.gz</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'本地dist.zip删除失败'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'本地dist.zip删除成功'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">backupApiFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 恢复被删除的devApiUrl 文件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">backupApiFile</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./devApiUrl.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ipFileContent<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IP文件恢复失败'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'IP文件恢复完成'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">successLog</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> 恭喜您，项目部署成功了^_^</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">readApiFile</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./devApiUrl.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'读取devApiUrl.js文件出错'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> data\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 压缩</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">compress</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sourceDir<span class=\"token punctuation\">,</span> targetPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span>targetPath<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> archive <span class=\"token operator\">=</span> <span class=\"token function\">archiver</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tar'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token literal-property property\">gzip</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">gzipOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">level</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  archive<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span>\n  archive<span class=\"token punctuation\">.</span><span class=\"token function\">directory</span><span class=\"token punctuation\">(</span>sourceDir<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span>sourceDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> archive<span class=\"token punctuation\">.</span><span class=\"token function\">finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">runTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面的代码即是整个自动部署的全部代码了, 那么可以在 <code>package.json</code>中新增命令,类似以下这样.</p>\n<p><img src=\"https://image.xposean.top/20200813154823.png\" alt=\"image-20200813154820890\"></p>\n<p>那么就可以很方便的使用 <code>npm run deploy</code>去执行我们的自动部署功能啦。</p>\n<h2 id=\"优化方向\"><a href=\"#优化方向\" class=\"headerlink\" title=\"优化方向\"></a>优化方向</h2><p>后续可以考虑加入脚手架中, 并上传至私有的<code>npm</code>库, 这样在操作多个项目的时候, 需要重复复制部署代码, 直接通过<code>npm instal xxx</code> 执行。</p>\n<p>如果有更好的方案或者在文章中有错误的地方, 可以直接通过<a href=\"https://github.com/Anonlyy\">github</a>联系我哦, 不胜感激</p>\n","text":"今天来介绍一下, 如何利用node编写部署脚本, 来实现一键部署的功能 背景因为我司的开发流程比较特殊, 开发环境的服务器ip会经常变化, 并不固定, 所以在前端部署代码的时候十分麻烦, 部署流程如下: 可以看出, 这种方式存在一些缺点： 每次部署都需要打开xshell或winS...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"开发技巧","slug":"开发技巧","count":2,"path":"api/categories/开发技巧.json"}],"tags":[{"name":"开发技巧","slug":"开发技巧","count":2,"path":"api/tags/开发技巧.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88%E9%A2%84%E7%A0%94\"><span class=\"toc-text\">方案预研</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-node-ssh\"><span class=\"toc-text\">1. node-ssh</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-archiver\"><span class=\"toc-text\">2. archiver</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-chalk\"><span class=\"toc-text\">3. chalk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-inquirer\"><span class=\"toc-text\">4. inquirer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-ora\"><span class=\"toc-text\">5. ora</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">方案实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">具体代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E6%96%B9%E5%90%91\"><span class=\"toc-text\">优化方向</span></a></li></ol>","author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"mapped":true,"prev_post":{"title":"你好, 请你解释一下浏览器缓存策略","uid":"f72948e64ab8542e417504906d3a8265","slug":"你好-请你解释一下浏览器缓存策略","date":"2021-01-15T08:08:44.000Z","updated":"2022-03-30T02:35:15.669Z","comments":true,"path":"api/articles/你好-请你解释一下浏览器缓存策略.json","keywords":null,"cover":"https://image.xposean.top/blogImage/008.png","text":"前言前段时间, 被面试官问了一个之前完全没有留意的问题, 你知道什么是浏览器的缓存策略吗？知道的话,能不能解释一下缓存策略的内容, 这下可把我问懵了, 毕竟那会对于浏览器缓存只是一知半解, 更别说浏览器缓存策略了, 于是下定决定查阅了相关资料, 于是才有了这篇文章。 概述浏览器缓...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"网络","slug":"网络","count":3,"path":"api/categories/网络.json"}],"tags":[{"name":"网络","slug":"网络","count":3,"path":"api/tags/网络.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}},"next_post":{"title":"教你快速拥有一个免费的图床且快捷上传","uid":"f7aad555d08cbab83a738e706571ee98","slug":"教你快速拥有一个免费的图床","date":"2020-05-11T09:42:32.000Z","updated":"2022-03-30T02:35:15.672Z","comments":true,"path":"api/articles/教你快速拥有一个免费的图床.json","keywords":null,"cover":[],"text":" 经常写博客的人都知道, 找图床是个很令人头疼的问题, 特别是我们这种没钱的, 总得找一些免费的图床, 一开始选择还比较多, 有微博图床、七牛云图床等等可供选择, 可是到了 2020年, 可选择且稳定还免费的图床, 越来越少了,于是无奈之下, 只能选择把图片手动上传到 githu...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"开发技巧","slug":"开发技巧","count":2,"path":"api/categories/开发技巧.json"}],"tags":[{"name":"开发技巧","slug":"开发技巧","count":2,"path":"api/tags/开发技巧.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}}}