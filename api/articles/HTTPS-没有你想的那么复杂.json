{"title":"HTTPS,没有你想的那么复杂","uid":"504da11f3eb2cec03d50a92ae3a009b3","slug":"HTTPS-没有你想的那么复杂","date":"2021-01-22T03:28:47.000Z","updated":"2022-03-30T02:35:15.665Z","comments":true,"path":"api/articles/HTTPS-没有你想的那么复杂.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0020.png","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>作为一名合格的前端工程师, 不可避免的要接触到<code>HTTPS</code>协议, 也一直没有时间深入的研究过这个东西, 趁着今天这篇文章, 咱们就来好好的探讨一下, 看完之后, 也许就能拨开<code>HTTPS</code>的神秘面纱。<br>在网络世界里, 怎样的数据传输才能理解为安全呢?我认为主要体现在以下几个方面:</p>\n<ul>\n<li>我发送的数据, 不该看的人看不懂</li>\n<li>我发的数据或者别人发我的数据, 不该看的人不能伪造或者修改</li>\n<li>互相发送的数据, 在过期之后不能看的人无法偷偷拿过来继续用</li>\n</ul>\n<p>而<code>HTTPS</code>怎么保证数据传输的安全呢？</p>\n<p>接下来咱们通过一个故事,来解释<code>HTTPS</code>安全传输的原理</p>\n<h2 id=\"故事内容\"><a href=\"#故事内容\" class=\"headerlink\" title=\"故事内容\"></a>故事内容</h2><h3 id=\"1-故事背景\"><a href=\"#1-故事背景\" class=\"headerlink\" title=\"1. 故事背景\"></a>1. 故事背景</h3><p>咱们今天的主人公, 一个是位于中国深圳的小王, 另一个则是位于日本东京的伊藤一郎, 两人远隔重洋,天各一方,通过网络联系,,小王痴迷于日本的二次元文化, 伊藤一郎则钟爱中国的传统文化, 两人一聊如故, 聊得热火朝天。</p>\n<p>两个人越聊越投机高谈阔论,，天南地北，还夹杂着不少隐私的话题。</p>\n<h3 id=\"2-聊天内容被窥探的感觉\"><a href=\"#2-聊天内容被窥探的感觉\" class=\"headerlink\" title=\"2.  聊天内容被窥探的感觉\"></a>2.  聊天内容被窥探的感觉</h3><p>有一天， 伊藤一郎 突然意识到： 坏了， 我们的通信是明文的， 这简直就是网络上裸奔啊， 任何一个不怀好意的家伙都可以监听我们通信，打开我们发送的数据包，窥探我们的隐私啊。</p>\n<p>小王说： “你不早点说，我刚才是不是把我的微信号给你发过去了？ 我是不是告诉你我上周去哪儿旅游了?  估计已经被人截取了吧！”</p>\n<p>伊藤一郎  提议： “要不我们做个数据的加密？ 每次传输之前， 你把消息用一个加密算法加密， 然后发到我这里以后我再解密， 这样别人就无法偷窥了，像这样： ”</p>\n<p><img src=\"https://image.xposean.top/20210311111141.png\"></p>\n<p>小王十分聪明，一看就明白了， 这<strong>加密和解密算法是公开的，那个密钥是保密的</strong>， 只有两人才知道， 这样生成的加密消息（密文） 别人就无法得知了。 他说： “伊藤一郎 老兄，你生成一个密钥， 然后把密钥发给我， 咱们这就开启加密消息， 让那些偷窥狂人们哭去吧！”</p>\n<p>（注：这就叫<strong>对称加密算法，</strong> 因为加密和解密用的是同一个密钥）</p>\n<p>一炷香功夫过去了， 伊藤一郎 还是没有回音， 小王忍不住地催促： “快发啊？！！！”</p>\n<p>伊藤一郎 终于回复了： “ 我感觉有一双眼睛正在虎视眈眈地盯着我们的通话， 如果我把密钥发给你， 也被他截取了， 那加密岂不白费工夫？”</p>\n<p>小王沉默了， 是啊， 网络是不安全的， 这密钥怎么安全地发过来啊 ？　</p>\n<p>“噢，对了，我下周要去日本旅游，到时候我们见一面，把密码确定下来，写到纸上，谁也偷不走， 这不就结了？”　</p>\n<p>“哈哈， 这倒是终极解决之道 ”  伊藤一郎 笑了， “可是，我不仅仅和你聊天， 我还要和易卜拉欣，阿卜杜拉， 弗拉基米尔，克里斯托夫，玛格丽特， 桥本龙太郎， 李贤俊， 许木木，郭芙蓉，吕秀才等人通信， 我总不能打着飞的，满世界的和人交换密码吧？ ”</p>\n<p>小王心里暗自佩服伊藤一郎同学的好友竟然遍布全球，看来他对加密通信的要求更加强烈啊！</p>\n<p>可是这个加密解密算法需要的密钥双方必须得知道啊， 但是密钥又无法通过网络发送， 这该死的偷窥者！</p>\n<p>这可怎么办？</p>\n<h3 id=\"3-利用非对称加密\"><a href=\"#3-利用非对称加密\" class=\"headerlink\" title=\"3. 利用非对称加密\"></a>3. 利用非对称加密</h3><p>伊藤一郎和 小王的通信无法加密，两人聊天也谨慎了不少， 直到有一天， 他们听说了一个叫做<code>RSA</code>的<strong>非对称加密算法</strong>，一下子来了灵感。</p>\n<p>这个<code>RSA</code>算法非常有意思，它不是像之前的算法， 双方必须协商一个保密的密钥， 而是有一对钥匙， 一个是保密的，称为<strong>私钥</strong>，另外一个是公开的，称为<strong>公钥</strong>。</p>\n<p>更有意思的是，<strong>用私钥加密的数据，只有对应的公钥才能解密，用公钥加密的数据， 只有对应的私钥才能解密</strong>。</p>\n<p><img src=\"https://image.xposean.top/20210311111544.png\"></p>\n<p>有了这两个非常棒的特性， 当小王给伊藤一郎发消息的时候， 就可以先用伊藤一郎的公钥去加密（反正伊藤一郎的公钥是公开的，地球人都知道）， 等到消息被伊藤一郎 收到后， 他就可以用自己的私钥去解密（只有伊藤一郎才能解开，私钥是保密的 ）</p>\n<p><img src=\"https://image.xposean.top/20210311112553.png\"></p>\n<p>反过来也是如此, 伊藤一郎给小王发消息是, 可以先用小王的公钥去加密, 等到消息被小王收到后, 小王就可以用自己的私钥解密。</p>\n<p>如此一来, 他们通信安全就固若金汤了, 其他人再也没办法窥探消息了。</p>\n<h3 id=\"4-非对称加密-对称加密\"><a href=\"#4-非对称加密-对称加密\" class=\"headerlink\" title=\"4.非对称加密+对称加密\"></a>4.非对称加密+对称加密</h3><p>两人实验了几次，  小王说： “伊藤一郎  , 你有没有感觉咱们这个<code>RSA</code>的加密和解密有点慢啊？”</p>\n<p>伊藤一郎叹了口气 ：“是啊， 我也注意到了， 刚才搜了一下，这个<code>RSA</code>算法虽然更加安全, 可是比之前的对称密钥算法要慢上百倍。我们就是加个密而已，现在搞得都没办法好好聊天了”</p>\n<p>小王灵机一动, 回答道：“回到咱们最初的问题，我们想用一个密钥来加密通信，那个对称加密算法是非常快的，但是苦于密钥无法安全传输， 现在有了<code>RSA</code> ,我想可以结合一下， 分两步走:</p>\n<p>　1. 我生成一个对称加密算法的密钥， 用<code>RSA</code>的方式安全发给你。<br> 　2. 我们随后就不用<code>RSA</code>了， 只用这个密钥，利用对称加密算法来通信,  如何？  ”</p>\n<p>PS: 这里与<code>HTTPS</code>的传输机制是类似的</p>\n<p>伊藤一郎 说： “你小子可以啊， 这样以来既解决了密钥的传递问题， 又解决了<code>RSA</code>速度慢的问题，不错不错。”　</p>\n<p>于是两人就安全地传递了对称加密的密钥， 用它来加密解密，果然快多了！</p>\n<h3 id=\"5-中间人攻击\"><a href=\"#5-中间人攻击\" class=\"headerlink\" title=\"5.中间人攻击\"></a>5.中间人攻击</h3><p>小王把和伊藤一郎 聊天的情况给好基友小张汇报了一次。</p>\n<p>小张告诫他说： “你要小心啊， 你确定网络那边坐着的确实是伊藤一郎?”</p>\n<p>小王着急地辩解说：“肯定是他啊，我都有他的公钥，我们俩的通信都是加密的。”</p>\n<p>小张提醒道：＂假如一开始，伊藤一郎给你发公钥的时候， 有个中间人，截取了伊藤一郎的公钥， 然后把自己的公钥发给了你，冒充伊藤一郎 ，你发的消息就用中间人的公钥加了密，那中间人不就可以解密看到消息了？＂</p>\n<p>小王背后出汗了，是啊，而且这个中间人解密以后，还可以用伊藤一郎的公钥加密，发给伊藤一郎, 伊藤一郎和我根本都意识不到， 还以为我们在安全传输呢！</p>\n<p><img src=\"https://image.xposean.top/20210311114052.png\"></p>\n<p><strong>看来问题出现在公钥的分发上</strong>！  虽然这个东西是公开的， 但是在别有用心的人看来，截取以后还可以干坏事 ！</p>\n<h3 id=\"6-你到底是谁？\"><a href=\"#6-你到底是谁？\" class=\"headerlink\" title=\"6.你到底是谁？\"></a>6.你到底是谁？</h3><p>可是怎样才能安全的分发公钥呢？这似乎又回到了最初的问题上, 怎么安全的保护密钥呢？或者说怎么声明公钥是真实的发送者呢？</p>\n<p>怎么声明呢？</p>\n<p>小王突然想到： 现实中有公证处，它提供的公证材料大家都信任，那在网络世界也可以建立一个这样的具备公信力的认证中心， 这个中心给大家颁发一个证书， 用于证明一个人的身份。</p>\n<p>这个证书里除了包含一个人的基本信息之外，还有包括最关键的一环：这个人的公钥！</p>\n<p>这样以来我拿到证书就可以安全地取到公钥了 ！ 完美！</p>\n<p>可是伊藤一郎 马上泼了一盆冷水：证书怎么安全传输？ 要是证书传递的过程中被篡改了怎么办？</p>\n<p>小王心里不由地咒骂起来： 尼玛， 这简直就是鸡生蛋，蛋生鸡的问题啊。</p>\n<p>天无绝人之路， 小王很快就找到了突破口： <strong>数字签名</strong>。</p>\n<p>简单来讲是这样的， 伊藤一郎可以把他的公钥和个人信息用一个<code>Hash</code>算法生成一个消息摘要， 这个<code>Hash</code>算法有个极好的特性，<strong>只要输入数据有一点点变化，那生成的消息摘要就会有巨变</strong>，这样就可以防止别人修改原始内容。</p>\n<p><img src=\"https://image.xposean.top/20210310164738.png\"></p>\n<p>可是作为攻击者的中间人笑了： “虽然我没办法改公钥，但是我可以把整个原始信息都替换了， 生成一个新的消息摘要， 你不还是辨别不出来？”</p>\n<p>小王说你别得意的太早 ， 我们会让有公信力的认证中心（<strong>简称CA</strong>）用它的私钥对消息摘要加密，形成签名：</p>\n<p><img src=\"https://image.xposean.top/20210310164931.png\"></p>\n<p>这还不算， 还把原始信息和数据签名合并， 形成一个全新的东西，叫做“<strong>数字证书</strong>”</p>\n<p><img src=\"https://image.xposean.top/20210310165348.png\"></p>\n<p>小王接着说：当伊藤一郎把他的证书发给我的时候， 我就用同样的<code>Hash</code> 算法， 再次生成消息摘要，然后用<code>CA</code>的公钥对数字签名解密， 得到<code>CA</code>创建的消息摘要， 两者一比，就知道有没有人篡改了！</p>\n<p><img src=\"https://image.xposean.top/20210310165901.png\"></p>\n<p>如果没人篡改， 我就可以安全的拿到伊藤一郎的公钥喽，有了公钥， 后序的加密工作就可以开始了。</p>\n<p>虽然很费劲， 但是为了防范你们这些偷窥者，实在是没办法啊。</p>\n<p>中间人恶狠狠地说： “算你小子狠！ 等着吧，我还有别的招。 对了，我且问你， 你这个CA的公钥怎么拿到？难道不怕我在你传输CA公钥的时候发起中间人攻击吗？如果我成功的伪装成了CA，你这一套体系彻底玩完。”</p>\n<p>小王语塞了，折腾了半天，又回到了公钥安全传输的问题！</p>\n<p>不过转念一想，想解决鸡生蛋，蛋生鸡的问题必须得打破这个怪圈才行，我必须得信任CA，并且通过安全的的方式获取他们的公钥，这样才能把游戏玩下去。</p>\n<p>PS: 这些CA本身也有证书来证明自己的身份，并且CA的信用是像树一样分级的，高层的CA给底层的CA做信用背书，而操作系统／浏览器中会内置一些顶层的CA的证书，相当于你自动信任了他们。这些顶层的CA证书一定得安全地放入操作系统／浏览器当中，否则世界大乱。</p>\n<h2 id=\"总结与回顾\"><a href=\"#总结与回顾\" class=\"headerlink\" title=\"总结与回顾\"></a>总结与回顾</h2><p>好了, 故事咱们已经讲完了, 那么咱们来回顾一下 故事里出现的几个关键词,搞清楚几个<strong>关键词</strong>后, 理解起<code>    HTTPS</code>, 就十分通俗易懂了。</p>\n<h3 id=\"对称加密\"><a href=\"#对称加密\" class=\"headerlink\" title=\"对称加密\"></a><strong>对称加密</strong></h3><p><strong>对称加密</strong>是最快速、最简单的一种加密方式，<strong>加密（encryption）与解密（decryption）用的是同样的密钥（secret key）</strong>。对称加密有很多种算法，由于它效率很高，所以被广泛使用在很多加密协议的核心当中。</p>\n<p>常见的对称加密算法有: <code>DES</code>、<code>3DES</code>、<code>AES</code>等</p>\n<p><strong>对称加密</strong>算法的优点是算法公开、计算量小、加密速度快、加密效率高。</p>\n<p><strong>对称加密</strong>算法的缺点是在数据传送前，发送方和接收方必须商定好密钥，然后使双方都能保存好密钥。其次如果一方的密钥被泄露，那么加密信息也就不安全了。另外，每对用户每次使用对称加密算法时，都需要使用其他人不知道的独一密钥，这会使得收、发双方所拥有的钥匙数量巨大，密钥管理成为双方的负担。</p>\n<h3 id=\"非对称加密\"><a href=\"#非对称加密\" class=\"headerlink\" title=\"非对称加密\"></a><strong>非对称加密</strong></h3><p><strong>非对称式密码学</strong>（英语：<strong>Asymmetric cryptography</strong>）是密码学的一种算法，它需要两个密钥，一个是公开密钥，另一个是私有密钥；公钥用作加密，私钥则用作解密。使用公钥把<a href=\"https://zh.wikipedia.org/wiki/%E6%98%8E%E6%96%87\">明文</a>加密后所得的<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%86%E6%96%87\">密文</a>，只能用相对应的<a href=\"https://zh.wikipedia.org/wiki/%E7%A7%81%E9%92%A5\">私钥</a>才能解密并得到原本的明文，最初用来加密的公钥不能用作解密。由于加密和解密需要两个不同的密钥，故被称为非对称加密；不同于加密和解密都使用同一个密钥的<a href=\"https://zh.wikipedia.org/wiki/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\">对称加密</a>。公钥可以公开，可任意向外发布；私钥不可以公开，必须由用户自行严格秘密保管，绝不透过任何途径向任何人提供，也不会透露给被信任的要通信的另一方。</p>\n<h3 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a><strong>数字签名</strong></h3><p><img src=\"https://image.xposean.top/20210310164931.png\"></p>\n<p>数字签名的主要作用就是 验证信息的可信度的, 故事里其实也已经描述过了, 通过对发送方的公钥、公钥信息等内容进行<code>Hash</code>算法加密, 生成消息摘要, 再用CA的私钥对消息摘要进行加密, 生成签名, 即<strong>数字签名</strong>。</p>\n<h3 id=\"数字证书\"><a href=\"#数字证书\" class=\"headerlink\" title=\"数字证书\"></a><strong>数字证书</strong></h3><p><img src=\"https://image.xposean.top/20210310165348.png\"></p>\n<p>而数字证书其实就是在数字签名的基础上, 增加 公钥和证书的一些基础信息(如申请者与颁布者信息、有效期等).</p>\n<p>现在的数字证书申请其实已经很方便了, 可以直接去阿里云或腾讯云等网站, 提交资料购买。</p>\n<h3 id=\"HTTPS的传输过程\"><a href=\"#HTTPS的传输过程\" class=\"headerlink\" title=\"HTTPS的传输过程\"></a><strong>HTTPS的传输过程</strong></h3><p>前面铺垫了如此之多, 如果你都理解了, 那下面这张描述<code>HTTPS</code>传输过程的图片你会觉得十分简单。</p>\n<p><img src=\"https://image.xposean.top/20210311110301.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>参考文章</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <a href=\"https://baike.baidu.com/item/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/2152944?fr=aladdin\">【百度百科：对称加密】</a></p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://zh.wikipedia.org/wiki/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86\">【维基百科：非对称加密】</a></p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://baike.baidu.com/item/RSA%E7%AE%97%E6%B3%95/263310?fromtitle=RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95&fromid=8448931&fr=aladdin\">【百度百科：RSA算法】</a></p></blockquote>\n","feature":true,"text":"前言作为一名合格的前端工程师, 不可避免的要接触到HTTPS协议, 也一直没有时间深入的研究过这个东西, 趁着今天这篇文章, 咱们就来好好的探讨一下, 看完之后, 也许就能拨开HTTPS的神秘面纱。在网络世界里, 怎样的数据传输才能理解为安全呢?我认为主要体现在以下几个方面: 我...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"网络","slug":"网络","count":3,"path":"api/categories/网络.json"}],"tags":[{"name":"网络","slug":"网络","count":3,"path":"api/tags/网络.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%85%E4%BA%8B%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">故事内容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%95%85%E4%BA%8B%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">1. 故事背景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%81%8A%E5%A4%A9%E5%86%85%E5%AE%B9%E8%A2%AB%E7%AA%A5%E6%8E%A2%E7%9A%84%E6%84%9F%E8%A7%89\"><span class=\"toc-text\">2.  聊天内容被窥探的感觉</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%88%A9%E7%94%A8%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">3. 利用非对称加密</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86-%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">4.非对称加密+对称加密</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">5.中间人攻击</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E4%BD%A0%E5%88%B0%E5%BA%95%E6%98%AF%E8%B0%81%EF%BC%9F\"><span class=\"toc-text\">6.你到底是谁？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">总结与回顾</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">对称加密</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">非对称加密</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">数字签名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6\"><span class=\"toc-text\">数字证书</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTTPS%E7%9A%84%E4%BC%A0%E8%BE%93%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">HTTPS的传输过程</span></a></li></ol></li></ol>","author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"一文带你知晓HTTP/2","uid":"6886a329624b279c7fd485ea2219eb1f","slug":"一文带你了解HTTP-2的优势","date":"2020-12-22T02:41:40.000Z","updated":"2022-03-30T02:35:15.668Z","comments":true,"path":"api/articles/一文带你了解HTTP-2的优势.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0016.png","text":"前言作为一个经常跟web 打交道的程序员，了解HTTP协议是必须的, 通过本文, 希望能够让你了解到一些关于HTTP协议和HTTP&#x2F;2的基本概念和优劣势,如有不对的地方请指出。 HTTP协议HTTP的全称是超文本传输协议 (HyperText Transfer Prot...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"网络","slug":"网络","count":3,"path":"api/categories/网络.json"}],"tags":[{"name":"网络","slug":"网络","count":3,"path":"api/tags/网络.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"feature":true}}