{"title":"详解CSS中的函数","uid":"85f7e5e03854074d222564e95ebbd6c6","slug":"详解CSS中的函数","date":"2017-11-05T14:29:54.000Z","updated":"2022-03-30T02:35:15.681Z","comments":true,"path":"api/articles/详解CSS中的函数.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0015.png","content":"<p>首先我们很好奇,css这一门都不能算的上是正常的编程语言,竟然还有函数这一回事,其实是有的,只是我们因为日常很少用到,所以一直没有听闻罢了。</p>\n<h2 id=\"calc\"><a href=\"#calc\" class=\"headerlink\" title=\"calc()\"></a>calc()</h2><p><code>calc()</code>从字面我们可以把他理解为一个函数<code>function</code>。其实calc是英文单词calculate(计算)的缩写，是css3的一个新增的功能，用于动态计算长度值。<br>通常會用來做數值的運算，尤其是針對於長寬等等，而他最特別的是運算的數值”不需要”相同單位.</p>\n<h3 id=\"calc-语法\"><a href=\"#calc-语法\" class=\"headerlink\" title=\"calc()语法\"></a>calc()语法</h3><p>calc()语法非常简单，就像我们小时候学加 （+）、减（-）、乘（*）、除（&#x2F;）一样，使用数学表达式来表示：</p>\n<pre><code>width: calc(四则运算);\n</code></pre>\n<h3 id=\"calc-的运算规则\"><a href=\"#calc-的运算规则\" class=\"headerlink\" title=\"calc()的运算规则\"></a>calc()的运算规则</h3><p>calc()使用通用的数学运算规则，但是也提供更智能的功能：</p>\n<p>使用“+”、“-”、“<em>” 和 “&#x2F;”四则运算；<br>可以使用百分比、px、em、rem等单位；<br>可以混合使用各种单位进行计算；<br>表达式中有“+”和“-”时，其前后必须要有空格，如”width: calc(12%+5em)”这种没有空格的写法是错误的；<br>表达式中有“</em>”和“&#x2F;”时，其前后可以没有空格，但建议留有空格。</p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;\n  &lt;title&gt;JS Bin&lt;/title&gt;\n&lt;/head&gt;\n  &lt;style&gt;\n   .box&#123;\n    width: 100%;\n    height: 500px;\n    background-color:red;\n    border:1px solid blue;\n  &#125;\n\n  .box-child&#123;\n    width: calc(100% - 100px);\n    height: calc(100% - 200px);\n    background-color:yellow;\n    border:1px solid #eee;\n  &#125;\n  &lt;/style&gt;\n&lt;body&gt;\n  &lt;div class=&quot;box&quot;&gt;\n    box\n    &lt;div class=&quot;box-child&quot;&gt;box-child&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><img src=\"https://i.imgur.com/tgYs6C4.png\"></p>\n<p>从效果我们可以看出,calc()可以动态计算我们的宽度,而且运算的时候數值”不需要”相同單位.</p>\n<p>此外我们的居中方式也多了一种,通过calc()的话:</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;\n  &lt;title&gt;JS Bin&lt;/title&gt;\n&lt;/head&gt;\n  &lt;style&gt;\n    #box&#123;\n      width: 200px;\n      height: 200px;\n      background-color:#eee;\n      position:absolute;\n      top:calc(50% - 100px);\n      left: calc(50% - 100px);\n    &#125;\n  &lt;/style&gt;\n&lt;body&gt;\n  &lt;div id=&quot;box&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"attr\"><a href=\"#attr\" class=\"headerlink\" title=\"attr()\"></a>attr()</h2><p><code>attr()</code> 函数返回选择元素的属性值。<br><code>content</code>属性和<code>attr</code>函数,在我们实际开发过程还是十分有用的,就是用来动态生成文本内容并展示在页面上,制作纯<code>CSS</code>的<code>Tooltip</code>;</p>\n<h3 id=\"attr-的日常使用\"><a href=\"#attr-的日常使用\" class=\"headerlink\" title=\"attr()的日常使用\"></a>attr()的日常使用</h3><p>下面让我们看看 attr 和 content 如何相互配合产生神奇效果的<br>    <div class=\"title\" data-title=\"attr\"></div></p>\n<pre><code>div[data-line]:after &#123; \n    content:attr(data-title);\n    display:block;\n    font-size:12px;\n    margin-top: 10px;\n&#125;\n</code></pre>\n<p>在页面就会直接展示attr这段文字了,然后我们通过<code>JavaScript</code>改变<code>data-title</code>的值,就能够动态改变文字的显示了。十分简单.<br>不需要用<code>JavaScript</code>里拼装字符串,CSS3里就能完成这些，是不是感觉CSS3可以部分的替代Javascript了！<br>attr的动态生成页面内容的能力着实是一件让人兴奋的事情。你实际上可以用它配合content对页面的很多其他元素和属性进行操作。</p>\n<h2 id=\"linear-gradient\"><a href=\"#linear-gradient\" class=\"headerlink\" title=\"linear-gradient()\"></a>linear-gradient()</h2><p>linear-gradient() 函数用于创建一个线性渐变的 “图像”。<br>以往我们做渐变效果,只能通过图片来实现,但现在有了<code>linear-gradient()</code>,我们就能通过它来制作想要的渐变背景了。<br>为了创建一个线性渐变，你需要设置一个起始点和一个方向（指定为一个角度）的渐变效果。你还要定义终止色。终止色就是你想让Gecko去平滑的过渡，并且你必须指定至少两种，当然也会可以指定更多的颜色去创建更复杂的渐变效果。</p>\n<h3 id=\"linear-gradient-语法\"><a href=\"#linear-gradient-语法\" class=\"headerlink\" title=\"linear-gradient()语法\"></a>linear-gradient()语法</h3><pre><code>background: linear-gradient(direction, color-stop1, color-stop2, ...);\n</code></pre>\n<p><code>direction</code>是指用角度值指定渐变的方向（或角度）。<br> to left：设置渐变为从右到左。相当于: 270deg<br> to right：设置渐变从左到右。相当于: 90deg<br> to top：设置渐变从下到上。相当于: 0deg<br> to bottom：设置渐变从上到下。相当于: 180deg。这是默认值，等同于留空不写。<br> xxxdeg:设置渐变角度。<br><code>color-stop1、color-stop2....</code>用于指定渐变的起止颜色,颜色数量不限制,即可以制作大于两种颜色以上的渐变背景。</p>\n<p>因为很简单,所以就不多介绍了,<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\">详细可看MDN\n</a></p>\n","text":"首先我们很好奇,css这一门都不能算的上是正常的编程语言,竟然还有函数这一回事,其实是有的,只是我们因为日常很少用到,所以一直没有听闻罢了。 calc()calc()从字面我们可以把他理解为一个函数function。其实calc是英文单词calculate(计算)的缩写，是css...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#calc\"><span class=\"toc-text\">calc()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#calc-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">calc()语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#calc-%E7%9A%84%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99\"><span class=\"toc-text\">calc()的运算规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attr\"><span class=\"toc-text\">attr()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#attr-%E7%9A%84%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">attr()的日常使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#linear-gradient\"><span class=\"toc-text\">linear-gradient()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#linear-gradient-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">linear-gradient()语法</span></a></li></ol></li></ol>","author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"mapped":true,"prev_post":{"title":"表格布局display:table的妙用","uid":"12871e3c295dd1902181cbe44daad752","slug":"表格布局display-table的妙用","date":"2017-11-12T11:29:49.000Z","updated":"2022-03-30T02:35:15.679Z","comments":true,"path":"api/articles/表格布局display-table的妙用.json","keywords":null,"cover":[],"text":"今天给大家讲一下,CSS2提供的一个布局,display:table;,虽然在CSS3提供了两个全新的布局,Flex和Grid布局,但却存在这样或那样的兼容性问题,其次我们有时候因为table的语义化和SEO问题,不想使用table标签,却需要实现table标签的表格布局,就能用...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}},"next_post":{"title":"CSS盒模型详解","uid":"345a3c40621a9fce5c40a188b50f83cc","slug":"CSS盒模型详解","date":"2017-11-05T04:38:19.000Z","updated":"2022-03-30T02:35:15.664Z","comments":true,"path":"api/articles/CSS盒模型详解.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0019.png","text":"在整理收集前端面试题的时候,经常有关于CSS盒模型的问题,属于经典问题了。很多博客里讲得也很模糊不清，于是，我在这里重新整理一下。 概念可以认为每个html标签都是一个方块，然后这个方块又包着几个小方块，如同盒子一层层的包裹着，这就是所谓的盒模型。其实就是我们平常F12检查元素的...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}}}