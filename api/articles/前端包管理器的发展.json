{"title":"前端包管理器的发展","uid":"656b08fb883cb37221ecfb23b5e18094","slug":"前端包管理器的发展","date":"2017-12-08T03:53:43.000Z","updated":"2022-03-30T02:35:15.670Z","comments":true,"path":"api/articles/前端包管理器的发展.json","keywords":null,"cover":"https://image.xposean.top/blogImage/009.png","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我们在开发时，会用到很多开发者写的第三方库。如果我们要使用别人写的某个包，每次都根据名称搜索一下官方网站，下载代码，解压，再使用，非常繁琐。<br>于是一个集中管理的工具应运而生：大家都把自己开发的模块打包后放到一个包管理器的平台上，如果要使用，直接通过包管理器安装就可以直接用，不用管代码存在哪，应该从哪下载。</p>\n<p>因此使用包管理器主要基于以下几个原因：</p>\n<ol>\n<li>方便的寻找和下载你需要的依赖库，并将它们整合到项目中，例如<code>jQuery</code>,<code>Angular</code>等。</li>\n<li>方便的下载指定版本的依赖库（免除去网络上搜索和下载）</li>\n<li><strong>解决第三方库之间的依赖关系</strong></li>\n</ol>\n<h2 id=\"Bower\"><a href=\"#Bower\" class=\"headerlink\" title=\"Bower\"></a>Bower</h2><p>由<code>twitter</code>推出的包管理工具。基于nodejs的模块化思想,把功能分散到各个模块中，让模块和模块之间存在联系,通过 Bower 来管理模块间的这种联系。它的特点是对包结构没有强制规范，即依赖扁平。</p>\n<p>但<code>Bower</code>本身不存储模块文件本身，也不保存模块的版本信息。模块的发布者通过注册（register）的方式，将模块的可访问的公开的git地址记录在bower的数据库中。而所有的版本都是通过模块发布者自己控制代码库的tag来决定。</p>\n<p><code>Bower</code>在安装流程基本上可以简单认为是将注册的git地址中的特定tag clone一份到你本地的bower_components 目录中。</p>\n<p><code>Bower</code>本身也存在很多问题,也是导致频临淘汰的原因:</p>\n<ol>\n<li>数据源的问题,<code>Bower</code> 直接取 <code>github</code> 而缺少像 <code>npm</code> 那样的 <code>registry</code>，导致一个问题，<code>github上</code>放的是源码，和部署所需是不同的，这导致使用上的问题，对于开发者而言,还需要专门开个分支整理出一个适合使用者的源码.</li>\n<li>缺乏构建工具</li>\n<li>源数据问题</li>\n</ol>\n<hr>\n<h2 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h2><p><code>npm</code>(node package manager)有两层含义。一层含义是Node的开放式模块登记平台和管理系统，网址为npmjs.org。另一层含义是Node默认的模块管理器，是一个命令行下的软件，用来安装和管理Node模块。</p>\n<p><code>npm</code>不需要单独安装。在安装Node的时候，会连带一起安装npm。<br>同时也是目前开发者中使用率最高的包管理器<br>但是，Node附带的npm可能不是最新版本，最好用下面的命令，更新到最新版本。</p>\n<p><code>NPM</code>较之<code>Bower</code>,具有一个独立的服务器网站用来存放开发者的库文件,且在处理库与库之间的依赖关系上更强.</p>\n<h3 id=\"CNPM\"><a href=\"#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h3><p>因为<code>npm</code>的服务器是在国外,所以被墙是经常的,这是就要介绍一下比较良心的<code>cnpm</code>了.<br>CNPM即是<a href=\"https://npm.taobao.org/\">淘宝镜像源</a>,这是一个完整  <a href=\"http://npmjs.org/\">npmjs.org</a> 镜像，用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。</p>\n<p>使用<code>cnpm</code>后,<code>install</code>的速度可比<code>cnpm</code>快得多了。</p>\n<hr>\n<h2 id=\"Yarn\"><a href=\"#Yarn\" class=\"headerlink\" title=\"Yarn\"></a>Yarn</h2><p>facebook发布的新一代包管理工具，旨在解决以往使用npm作为包管理会遇到的一些问题。从其官方介绍可以看到其重点强调的3个点：快、可靠、安全。</p>\n<h3 id=\"yarn的优势\"><a href=\"#yarn的优势\" class=\"headerlink\" title=\"yarn的优势\"></a>yarn的优势</h3><p>相比于<code>Node</code>的亲儿子<code>npm</code>来说，<code>yarn</code>有以下优势:</p>\n<p>1、安装模块速度更快<br><img src=\"http://7tszky.com1.z0.glb.clouddn.com/FifXFXX6rNLMtwA5xuvB85DzDL0M\"></p>\n<p>2、支持离线模式(只要你安装过此模块，第二次安装就会从缓存文件中直接复制过来)<br><code>yarn</code>会有一个缓存目录，会缓存以前安装过的软件包，再次安装时就不必从网络下载了，大大加速安装速度。<br>这一点很重要，<code>npm</code> 饱受诟病的一点就是，每次安装依赖，都需要从网络下载一大堆东西，而且是全部重新下载，工程多的时候比较烦人。</p>\n<p>3、依赖关系确定性.<br>在每一台机器上针对同一个工程安装依赖时，生成的依赖关系顺序和版本是一致的。<br>之前 npm 在这里有一个处理得不好的地方 。举例来说，我写的工程依赖 A, B, C 三个库，我在编写 package.json 的时候，给 A, B, C 都指定了版本号。但是 A 库可能又依赖 D, E, F 库，D 库又依赖 G, H 库。这么多关联依赖关系中，<strong>很可能某个库在指定依赖时，没有指定版本号</strong>。<br>于是，这就导致了一个问题。如果我在另一台机器上对同样的工程安装依赖，或者把这台机器工程下的 node_modules 目录删除来重新安装依赖。由于关联依赖中，没有指定版本号的库，发生了版本更新，就会导致再次安装的依赖，其中具体某些软件包的版本是不一致的。在这种情况下，你会发现原来能够正常运行的程序，忽然变得不能工作或一堆 BUG.</p>\n<p>而<code>yarn</code>在解析package.json文件时，会对其每个依赖包进行遍历分析生成yarn.lock文件。该文件描述了项目中每个包以及每个包中所依赖的包的版本信息。</p>\n<p>4.迁移方便<br>目前<code>npm</code>的项目迁移至<code>yarn</code>,基本是无痛迁移,可以很方便的就切换.</p>\n<hr>\n<h3 id=\"yarn-amp-npm-常用命令比较\"><a href=\"#yarn-amp-npm-常用命令比较\" class=\"headerlink\" title=\"yarn &amp; npm 常用命令比较\"></a>yarn &amp; npm 常用命令比较</h3><ul>\n<li>npm install &#x3D;&#x3D;&#x3D; yarn &#x2F; yarn install</li>\n<li>npm install xxx —save &#x3D;&#x3D;&#x3D; yarn add xxx</li>\n<li>npm uninstall xxx —save &#x3D;&#x3D;&#x3D; yarn remove xxx</li>\n<li>npm install xxx —save-dev &#x3D;&#x3D;&#x3D; yarn add xxx —dev</li>\n<li>npm update &#x3D;&#x3D;&#x3D; yarn upgrade</li>\n<li>npm install xxx -g &#x3D;&#x3D;&#x3D; yarn global add xxx<br>当然，在比较选择<code>yarn</code>与<code>npm</code>时，速度也是一个很重要的衡量指标。</li>\n</ul>\n<hr>\n<h3 id=\"Yarn总结\"><a href=\"#Yarn总结\" class=\"headerlink\" title=\"Yarn总结\"></a>Yarn总结</h3><p>yarn 相比 npm 最直观优势就是快<br>目前项目在基本可以无痛迁移使用。<br>yarn 目前并不是非常稳定，不少反馈script run以及下载包有问题。<br>lock功能具有双面性，是否锁定版本需要看具体情况而定</p>\n","text":"前言我们在开发时，会用到很多开发者写的第三方库。如果我们要使用别人写的某个包，每次都根据名称搜索一下官方网站，下载代码，解压，再使用，非常繁琐。于是一个集中管理的工具应运而生：大家都把自己开发的模块打包后放到一个包管理器的平台上，如果要使用，直接通过包管理器安装就可以直接用，不用...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Bower\"><span class=\"toc-text\">Bower</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NPM\"><span class=\"toc-text\">NPM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CNPM\"><span class=\"toc-text\">CNPM</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Yarn\"><span class=\"toc-text\">Yarn</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#yarn%E7%9A%84%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">yarn的优势</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#yarn-amp-npm-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">yarn &amp; npm 常用命令比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Yarn%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">Yarn总结</span></a></li></ol></li></ol>","author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"mapped":true,"prev_post":{"title":"谈谈现在的移动端页面调试","uid":"82ca99d72366ad356dc36bff3d6367ca","slug":"谈谈现在的移动端页面调试","date":"2017-12-19T03:21:26.000Z","updated":"2022-03-30T02:35:15.681Z","comments":true,"path":"api/articles/谈谈现在的移动端页面调试.json","keywords":null,"cover":[],"text":"通常我们在日常开发手机版网页的时候，都是通过PC浏览器的移动设备模式来模拟移动设备访问网页,但总会出现以下的问题: 开发时，在自己电脑上运行得好好的，在真机上打开就挂了，但是手机上又看不到错误的log信息； 作为开发者，我们的诉求很简单：有没有快捷的工具可以让我们在真机运行网页的...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}},"next_post":{"title":"MPA和SPA,你选哪一个","uid":"a62ea6a9ff7b388523bd21c04a242050","slug":"MPA和SPA-你选哪一个","date":"2017-11-23T00:57:12.000Z","updated":"2022-03-30T02:35:15.666Z","comments":true,"path":"api/articles/MPA和SPA-你选哪一个.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0023.png","text":"背景旧的桌面应用程序被Web应用程序推到了极点。基于Web的应用程序使用起来非常方便，可以从多个设备访问，并且易于升级。对移动友好的复杂应用程序的需求正在上升。熟悉Web应用程序开发的您必须了解两种主要的Web设计类型：单页应用程序（SPA）和多页面应用程序（MPA）。 多页面应...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}}}