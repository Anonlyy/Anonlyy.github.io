{"title":"CSS盒模型详解","uid":"345a3c40621a9fce5c40a188b50f83cc","slug":"CSS盒模型详解","date":"2017-11-05T04:38:19.000Z","updated":"2022-03-30T02:35:15.664Z","comments":true,"path":"api/articles/CSS盒模型详解.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0019.png","content":"<p>在整理收集前端面试题的时候,经常有关于CSS盒模型的问题,属于经典问题了。很多博客里讲得也很模糊不清，于是，我在这里重新整理一下。</p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p>可以认为每个html标签都是一个方块，然后这个方块又包着几个小方块，如同盒子一层层的包裹着，这就是所谓的盒模型。<br>其实就是我们平常F12检查元素的时候页面表示出来的这个图片。</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2017/10/25/9cb491d4bd5d326aeb16632280411283?imageView2/0/w/1280/h/960/ignore-error/1\"></p>\n<p>从上图即可知,正常的一个盒子的内容包括:</p>\n<ol>\n<li>margin</li>\n<li>border</li>\n<li>padding</li>\n<li>content<br>四部分组成。</li>\n</ol>\n<h2 id=\"分类和区别\"><a href=\"#分类和区别\" class=\"headerlink\" title=\"分类和区别\"></a>分类和区别</h2><p>那盒模型是分为 <strong>IE盒模型</strong> 和 <strong>W3C标准盒模型</strong>。</p>\n<h3 id=\"区别是\"><a href=\"#区别是\" class=\"headerlink\" title=\"区别是?\"></a>区别是?</h3><ol>\n<li>W3C 标准盒模型：</li>\n</ol>\n<p>属性<code>width</code>,<code>height</code>只包含内容<code>content</code>，不包含<code>border</code>和<code>padding</code>。</p>\n<ol start=\"2\">\n<li>IE 盒模型：</li>\n</ol>\n<p>属性<code>width</code>,<code>height</code>包含<code>border</code>和<code>padding</code>，指的是<code>content</code>+<code>padding</code>+<code>border</code>。</p>\n<p>意思是什么呢?<br>就是如果是W3C 标准盒模型,那么我们的宽度和高度就不包括边框和内边距了,即这种模型下,我们如果已经设置了宽高度,那么即便改变了<code>border</code>和<code>padding</code>的大小,也不会改变整个元素的宽高。</p>\n<h2 id=\"日常开发注意事项\"><a href=\"#日常开发注意事项\" class=\"headerlink\" title=\"日常开发注意事项\"></a>日常开发注意事项</h2><p>在我们日常的CSS开发中,默认浏览器渲染的时候都是 W3C 标准盒模型.<br>在这种盒模型下,我们的日常开发会遇到什么问题呢？<br>假设我们设定了一个div元素</p>\n<pre><code>.box&#123;\n    width:200px;\n    height:200px;\n    background-color:pink;\n&#125;\n</code></pre>\n<p>这个时候我们检查<code>.box</code>元素,没有意外,高宽都是200px.<br>那接着我们继续添加CSS元素,</p>\n<pre><code>.box&#123;\n    width:200px;\n    height:200px;\n    background-color:pink;\n    padding:20px;\n    border:10px solid black;\n&#125;    \n</code></pre>\n<p>这个时候我们再检查元素,高宽就变成了 200+20+20+10+10&#x3D;260 了。<br>说明<code>padding</code>和<code>border</code>会把整个盒子<strong>撑高撑大</strong>。<br>那这种情况给我们的开发者就造成一种困扰,我已经设置高宽是200px的情况下,就是不想要有其他属性再去影响它了.<br>而且如果我们是一行多个元素百分比布局的情况下,一旦给单个元素添加了<code>padding</code>或<code>border</code>元素的话,就会影响单个元素宽度,”一行”变成”两行”,极不美观.</p>\n<p>于是,我们<code>CSS3</code>添加了一个属性:<code>box-sizing</code>,他的默认属性值就是<code>content-box</code>(即 W3C 标准盒模型),那么当我们的把属性值设置为<code>border-box</code>(IE盒模型)之后,以上出现的问题就迎刃而解了。</p>\n<p>因为在这种模型下,我们盒子的宽高度是包括<code>padding</code>和<code>border</code>的,即便我们给某个元素设置了padding或border值,也不会变动元素的宽高度,也不会撑大撑高元素。</p>\n<p>所以在日常CSS开发过程中,在设置全局css中(如bootstrap),我们都会给所有元素添加一个属性就是:</p>\n<pre><code>box-sizing:border-box;\n</code></pre>\n","text":"在整理收集前端面试题的时候,经常有关于CSS盒模型的问题,属于经典问题了。很多博客里讲得也很模糊不清，于是，我在这里重新整理一下。 概念可以认为每个html标签都是一个方块，然后这个方块又包着几个小方块，如同盒子一层层的包裹着，这就是所谓的盒模型。其实就是我们平常F12检查元素的...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB%E5%92%8C%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">分类和区别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8C%BA%E5%88%AB%E6%98%AF\"><span class=\"toc-text\">区别是?</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A5%E5%B8%B8%E5%BC%80%E5%8F%91%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">日常开发注意事项</span></a></li></ol>","author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}},"mapped":true,"prev_post":{"title":"详解CSS中的函数","uid":"85f7e5e03854074d222564e95ebbd6c6","slug":"详解CSS中的函数","date":"2017-11-05T14:29:54.000Z","updated":"2022-03-30T02:35:15.681Z","comments":true,"path":"api/articles/详解CSS中的函数.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0015.png","text":"首先我们很好奇,css这一门都不能算的上是正常的编程语言,竟然还有函数这一回事,其实是有的,只是我们因为日常很少用到,所以一直没有听闻罢了。 calc()calc()从字面我们可以把他理解为一个函数function。其实calc是英文单词calculate(计算)的缩写，是css...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}},"next_post":{"title":"jQuery的插件机制","uid":"5060dfe35a7d053a870cb97f4dd7d628","slug":"jQuery的插件机制","date":"2017-10-24T08:05:52.000Z","updated":"2022-03-30T02:35:15.668Z","comments":true,"path":"api/articles/jQuery的插件机制.json","keywords":null,"cover":"https://image.xposean.top/blogImage/0022.png","text":"jQuery框架现况分析和概述虽然jQuery的市场占有率正逐年下滑,但不可避免的,jQuery仍是目前前端领域里使用率最高的前端框架,仍旧需要深入学习它,利用它更方便的写出优秀的前端代码。 先来回顾一下,jQuery的优秀之处: 强大的DOM选择器 可靠的事件处理器 完善的Aj...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"}],"author":{"name":"Xposean","slug":"blog-author","avatar":"https://cdn.xposean.top/smallStack/dist/img/avatar.6354a35.png","link":"/","description":"做一个刚刚好的前端仔","socials":{"github":"https://github.com/Anonlyy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.im/user/1451011078620568","customs":{"site":{"icon":"/image/site_logo.png","link":"https://www.xposean.top"}}}}}}